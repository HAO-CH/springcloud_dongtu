<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongtu.mapper.TbSellerPayLogMapper" >
  <resultMap id="BaseResultMap" type="com.dongtu.pojo.TbSellerPayLog" >
    <result column="sp_order_id" property="spOrderId" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pay_price" property="payPrice" jdbcType="DECIMAL" />
    <result column="pay_order_id" property="payOrderId" jdbcType="BIGINT" />
    <result column="pay_transaction_id" property="payTransactionId" jdbcType="VARCHAR" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sp_order_id, seller_id, pay_time, pay_price, pay_order_id, pay_transaction_id, pay_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dongtu.pojo.TbSellerPayLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_seller_pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dongtu.pojo.TbSellerPayLogExample" >
    delete from tb_seller_pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dongtu.pojo.TbSellerPayLog" >
    insert into tb_seller_pay_log (sp_order_id, seller_id, pay_time, 
      pay_price, pay_order_id, pay_transaction_id, 
      pay_status)
    values (#{spOrderId,jdbcType=BIGINT}, #{sellerId,jdbcType=BIGINT}, #{payTime,jdbcType=TIMESTAMP}, 
      #{payPrice,jdbcType=DECIMAL}, #{payOrderId,jdbcType=BIGINT}, #{payTransactionId,jdbcType=VARCHAR}, 
      #{payStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dongtu.pojo.TbSellerPayLog" >
    insert into tb_seller_pay_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="spOrderId != null" >
        sp_order_id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="payPrice != null" >
        pay_price,
      </if>
      <if test="payOrderId != null" >
        pay_order_id,
      </if>
      <if test="payTransactionId != null" >
        pay_transaction_id,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="spOrderId != null" >
        #{spOrderId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payPrice != null" >
        #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="payOrderId != null" >
        #{payOrderId,jdbcType=BIGINT},
      </if>
      <if test="payTransactionId != null" >
        #{payTransactionId,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dongtu.pojo.TbSellerPayLogExample" resultType="java.lang.Integer" >
    select count(*) from tb_seller_pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_seller_pay_log
    <set >
      <if test="record.spOrderId != null" >
        sp_order_id = #{record.spOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payPrice != null" >
        pay_price = #{record.payPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payOrderId != null" >
        pay_order_id = #{record.payOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.payTransactionId != null" >
        pay_transaction_id = #{record.payTransactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatus != null" >
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_seller_pay_log
    set sp_order_id = #{record.spOrderId,jdbcType=BIGINT},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_price = #{record.payPrice,jdbcType=DECIMAL},
      pay_order_id = #{record.payOrderId,jdbcType=BIGINT},
      pay_transaction_id = #{record.payTransactionId,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

    <select id="findPayLogByOutTradeNo" resultMap="BaseResultMap">
        select * from tb_seller_pay_log where sp_order_id = #{out_trade_no}
    </select>
</mapper>